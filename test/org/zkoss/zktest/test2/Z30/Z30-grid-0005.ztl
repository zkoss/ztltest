<test tags="grid,column,auxhead,colspan,sizable,ie9">
	<case id="ColumnSpan">
		<server><![CDATA[
			<zk xmlns:n="http://www.zkoss.org/2005/zk/native">
				<n:p>Test the complex grid with Auxhead, you can see the layout shows properly and also shows properly after sizing the header.</n:p>
				<window title="Test common grid and auxhead.">
				  <checkbox id="checkbox" label="sizable" onCheck="head3.sizable = self.checked"/>
					<grid id="grid">
						<auxhead id="head1">
							<auxheader label="A+B" colspan="2"/>
							<auxheader label="C"/>
						</auxhead>	
						<auxhead id="head2">
							<auxheader label="A"/>
							<auxheader label="B+C"  colspan="2"/>
						</auxhead>
						<columns id="head3">
							<column id="column" label="AA"/>
							<column label="BB"/>
							<column label="CC"/>
						</columns>
						<auxhead id="head4">
							<auxheader label="A+B+C" colspan="3"/>
						</auxhead>
						<rows>
							<row>
								<label value="AA01"/>
								<label value="BB01"/>
								<label value="CC01"/>
							</row>
							<row>
								<label value="AA01"/>
								<label value="BB01"/>
								<label value="CC01"/>
							</row>
							<row>
								<label value="AA01"/>
								<label value="BB01"/>
								<label value="CC01"/>
							</row>
						</rows>
					</grid>
				</window>
			</zk>
		]]></server>
		<client><![CDATA[
			String checkId = checkbox.uuid() + "-real";
			Element $column = column.$n();
			JQuery $jq = jq($column);
			String uuid = column.uuid();
			Element $head = grid.$n("head");
			Element $body = grid.$n("body");
			
			// check colSpan
			int c1 = Integer.parseInt(head1.firstChild().$n().get("colSpan"));
			int c2 = Integer.parseInt(head1.lastChild().$n().get("colSpan"));
			verifyEquals(3, c1 + c2);
			c1 = Integer.parseInt(head2.firstChild().$n().get("colSpan"));
			c2 = Integer.parseInt(head2.lastChild().$n().get("colSpan"));
			verifyEquals(3, c1 + c2);

			c1 = Integer.parseInt(head3.firstChild().$n().get("colSpan"));
			c2 = Integer.parseInt(head3.firstChild().nextSibling().$n().get("colSpan"));
			int c3 = Integer.parseInt(head3.lastChild().$n().get("colSpan"));
			verifyEquals(3, c1 + c2 + c3);
			
			c1 = Integer.parseInt(head4.firstChild().$n().get("colSpan"));
			verifyEquals(3, c1);

			int w = zk(grid).revisedWidth(getElementWidth(grid.uuid()).intValue());
			verifyEquals(w + "", $head.get("offsetWidth"));
			verifyEquals(w + "", $body.get("offsetWidth"));
			int h = zk(grid).revisedHeight(getElementHeight(grid.uuid()).intValue());
			verifyEquals(h, Integer.parseInt($head.get("offsetHeight")) + Integer.parseInt($body.get("offsetHeight")));
			
			// check sizing
			click(checkId);
			waitResponse();
			Number width = getElementWidth(uuid);
			mouseMoveAt(column, width + ",0");
			verifyTrue($jq.hasClass("z-column-sizing"));
			
			//a workaround to chrome, move 10px per drag
			dragdropTo(column, width + ",0", width.intValue() - 10 + ",0");
			dragdropTo(column, width.intValue() - 10 + ",0", width.intValue() - 20 + ",0");
			verifyNotEquals(width.intValue(), getElementWidth(uuid).intValue());
		]]></client>
	</case>
</test>