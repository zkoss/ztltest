<test tags="zbind">
	<case id="f2">
		<server><!--
	<vbox apply="org.zkoss.bind.BindComposer"
		viewModel="@bind(vm='org.zkoss.zktest.zbind.viewmodel.form.F2')" width="400px">
	<label multiline="true">
	f1.
	form, command+argument, validator+argument,notifychange
	1. input 5 in quantity of item A and item B
	2. click compute, subtotal updated, total should be 150
	3. input 11 in quantity of item A, compute, total not changed
	4. input 5 in quantity of item A, select off% 50
	5. compute, total should be 75
	
	</label>
	<grid self="@form(id='fx', load=vm.order, save=vm.order before 'compute') @validator(vm.f2Validator, max=10)">
		<columns>
			<column label="Name" />
			<column label="Price" />
			<column label="Quantity (less than 10)" width="140px" />
			<column label="Subtotal" />
		</columns>
		<rows>
			<row>
				<label value="Item A" />
				<label value="10" />
				<intbox id="quantityABox"
					value="@bind(fx.quantityA)" />
				<label id="subtotalA" value="@bind(vm.order.subtotalA)" />
			</row>
			<row>
				<label value="Item B" />
				<label value="20" />
				<intbox id="quantityBBox"
					value="@bind(fx.quantityB) " />
				<label id="subtotalB" value="@bind(vm.order.subtotalB)" />
			</row>
			<row>
				<label value="" />
				<label value="Off %" />
				<combobox id="offBox" width="80px">
					<comboitem label="90" value="90" />
					<comboitem label="80" value="80" />
					<comboitem label="70" value="70" />
					<comboitem label="60" value="60" />
					<comboitem label="50" value="50" />
				</combobox>
				<button id="computeButton" label="Compute"
					onClick="@bind('compute', off=offBox.selectedItem.value)" />
			</row>
			<row>
				<label value="Total" />
				<label value="" />
				<label value="" />
				<label id="total" value="@bind(load=vm.order.total after 'compute')" />
			</row>
		</rows>

	</grid>

	</vbox>		
		--></server>
		<client>
				type(quantityABox, "5");
				type(quantityBBox, "5");
				click(computeButton);
				waitResponse();
				verifyEquals("50", getValue(subtotalA));
				verifyEquals("100", getValue(subtotalB));
				verifyEquals("150", getValue(total));

				type(quantityABox, "11");
				click(computeButton);
				waitResponse();
				verifyEquals("150", getValue(total));
				
				type(quantityABox, "5");
				type(offBox, "50");
				click(computeButton);
				waitResponse();
				verifyEquals("75", getValue(total));

		</client>
	</case>
</test>